{"version":3,"sources":["../../src/routes/index.js"],"names":["express","require","router","Router","withoutLoginRouter","routerConfigMap","Api","registerRouterByMethod","customerRouter","routerConfig","url","methodType","RouterConfigBuilder","METHOD_TYPE_GET","get","req","res","func","METHOD_TYPE_POST","post","Object","keys","next","send","title"],"mappings":";;;;;;;AAEA;;AACA;;;;;;;;;;AAHA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAIA;AACA;AACA,MAAMC,kBAAkB,GAAGJ,OAAO,CAACG,MAAR,EAA3B;;AAEA,IAAIE,eAAe,qBACdC,YADc,CAAnB;AAIA;;;;;;;;AAMA,SAASC,sBAAT,CAAgCC,cAAhC,EAAgDC,YAAhD,EAA8DC,GAA9D,EAAmE;AACjE,UAAQD,YAAY,CAACE,UAArB;AACE,SAAKC,+BAAoBC,eAAzB;AACEL,MAAAA,cAAc,CAACM,GAAf,CAAmBJ,GAAnB,EAAwB,CAACK,GAAD,EAAMC,GAAN,KAAc;AACpC,eAAOP,YAAY,CAACQ,IAAb,CAAkBF,GAAlB,EAAuBC,GAAvB,CAAP;AACD,OAFD;AAGA;;AACF,SAAKJ,+BAAoBM,gBAAzB;AACEV,MAAAA,cAAc,CAACW,IAAf,CAAoBT,GAApB,EAAyB,CAACK,GAAD,EAAMC,GAAN,KAAc;AACrC,eAAOP,YAAY,CAACQ,IAAb,CAAkBF,GAAlB,EAAuBC,GAAvB,CAAP;AACD,OAFD;AAGA;;AACF;AAXF;AAaD,C,CAED;;;AACA,KAAK,IAAIN,GAAT,IAAgBU,MAAM,CAACC,IAAP,CAAYhB,eAAZ,CAAhB,EAA8C;AAC5C,MAAII,YAAY,GAAGJ,eAAe,CAACK,GAAD,CAAlC,CAD4C,CAE5C;;AACAH,EAAAA,sBAAsB,CAACH,kBAAD,EAAqBK,YAArB,EAAmCC,GAAnC,CAAtB;AACD;AAED;;;AACAR,MAAM,CAACY,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBM,IAApB,EAA0B;AACxCN,EAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAT;AACD,CAFD;eAIetB,M","sourcesContent":["var express = require('express')\nvar router = express.Router()\nimport RouterConfigBuilder from '../library/utils/router_config_builder'\nimport Api from './api'\n\n// 路由分为以下部分\n// 不需要登录\nconst withoutLoginRouter = express.Router()\n\nlet routerConfigMap = {\n  ...Api\n}\n\n/**\n * 根据请求方法注册路由\n * @param {*} customerRouter\n * @param {*} routerConfig\n * @param {*} url\n */\nfunction registerRouterByMethod(customerRouter, routerConfig, url) {\n  switch (routerConfig.methodType) {\n    case RouterConfigBuilder.METHOD_TYPE_GET:\n      customerRouter.get(url, (req, res) => {\n        return routerConfig.func(req, res)\n      })\n      break\n    case RouterConfigBuilder.METHOD_TYPE_POST:\n      customerRouter.post(url, (req, res) => {\n        return routerConfig.func(req, res)\n      })\n      break\n    default:\n  }\n}\n\n// 自动注册\nfor (let url of Object.keys(routerConfigMap)) {\n  let routerConfig = routerConfigMap[url]\n  // 不需要登录\n  registerRouterByMethod(withoutLoginRouter, routerConfig, url)\n}\n\n/* GET home page. */\nrouter.get('/', function (req, res, next) {\n  res.send({ title: '测试返回' })\n})\n\nexport default router"],"file":"index.js"}