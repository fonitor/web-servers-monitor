{"version":3,"sources":["../../src/routes/index.js"],"names":["express","require","router","Router","routerConfigMap","Api","registerRouterByMethod","routerConfig","url","methodType","RouterConfigBuilder","METHOD_TYPE_GET","get","func","METHOD_TYPE_POST","post","Object","keys","req","res","send","title"],"mappings":";;;;;;;AAEA;;AACA;;;;;;;;;;AAHA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AAIA;AAEA,IAAIC,eAAe,qBACdC,YADc,CAAnB;AAIA;;;;;;;AAKA,SAASC,sBAAT,CAAgCC,YAAhC,EAA8CC,GAA9C,EAAmD;AACjD,UAAQD,YAAY,CAACE,UAArB;AACE,SAAKC,+BAAoBC,eAAzB;AACET,MAAAA,MAAM,CAACU,GAAP,CAAWJ,GAAX,EAAgBD,YAAY,CAACM,IAA7B;AACA;;AACF,SAAKH,+BAAoBI,gBAAzB;AACEZ,MAAAA,MAAM,CAACa,IAAP,CAAYP,GAAZ,EAAiBD,YAAY,CAACM,IAA9B;AACA;;AACF;AAPF;AASD,C,CAED;;;AACA,KAAK,IAAIL,GAAT,IAAgBQ,MAAM,CAACC,IAAP,CAAYb,eAAZ,CAAhB,EAA8C;AAC5C,MAAIG,YAAY,GAAGH,eAAe,CAACI,GAAD,CAAlC,CAD4C,CAE5C;;AACAF,EAAAA,sBAAsB,CAACC,YAAD,EAAeC,GAAf,CAAtB;AACD;AAED;;;AACAN,MAAM,CAACU,GAAP,CAAW,GAAX,EAAgB,UAAUM,GAAV,EAAeC,GAAf,EAAoB;AAClCA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAT;AACD,CAFD;eAIenB,M","sourcesContent":["var express = require('express')\nvar router = express.Router()\nimport RouterConfigBuilder from '../library/utils/router_config_builder'\nimport Api from './api'\n\n// 路由分为以下部分\n\nlet routerConfigMap = {\n  ...Api\n}\n\n/**\n * 根据请求方法注册路由\n * @param {*} routerConfig\n * @param {*} url\n */\nfunction registerRouterByMethod(routerConfig, url) {\n  switch (routerConfig.methodType) {\n    case RouterConfigBuilder.METHOD_TYPE_GET:\n      router.get(url, routerConfig.func)\n      break\n    case RouterConfigBuilder.METHOD_TYPE_POST:\n      router.post(url, routerConfig.func)\n      break\n    default:\n  }\n}\n\n// 自动注册\nfor (let url of Object.keys(routerConfigMap)) {\n  let routerConfig = routerConfigMap[url]\n  // 不需要登录\n  registerRouterByMethod(routerConfig, url)\n}\n\n/* GET home page. */\nrouter.get('/', function (req, res) {\n  res.send({ title: '测试返回' })\n})\n\nexport default router"],"file":"index.js"}