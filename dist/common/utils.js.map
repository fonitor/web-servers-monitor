{"version":3,"sources":["../../src/common/utils.js"],"names":["Util","constructor","getInstance","options","instance","isType","_obj","isNumeric","isBoolean","isString","isNull","isUndefined","isSymbol","isPlainObject","isArray","isRegExp","isDate","isfunction","isWindow","_type","_toString","toString","key","hasOwnProperty","reg","RegExp","anonymous","val","test","call","isBlank","obj","undefined","parseUrlParams","url","indexOf","substr","paramsArr","match","params","forEach","item","kv","split","decodeURIComponent","getQueryObject","search","substring","lastIndexOf","base_url","replace","rs","$1","$2","name","String","baseUrl","query","makeQuery","queryObject","Object","entries","reduce","result","entry","push","join","funcUrlDel","loca","location","origin","pathname","arr","i","length","JSON","stringify","replaceParamVal","paramName","replaceWith","oUrl","href","re","eval","handleEmptyData","newObj","keys","map","sleep","ms","Promise","resolve","setTimeout","objectToArray","value","getIp","ip","LIpip","ip2Locate"],"mappings":"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","sourcesContent":["import LIpip from '../library/ipip'\n\n/**\n * 工具类\n */\nexport default class Util {\n\n    /**\n     * 基础配置\n     * @return {?}\n     */\n    constructor() {\n\n    }\n\n    /**\n     * 单例\n     * @param {*} options\n     * @return {?}\n     */\n    static getInstance(options = {}) {\n        if (!Util.instance) {\n            Util.instance = new Util(options)\n        }\n        return Util.instance\n    }\n\n    /**\n     * 判断数据类型\n     * util.isType().isArray(……)\n     */\n    isType() {\n        let _obj = {\n            isNumeric: 'Number',\n            isBoolean: 'Boolean',\n            isString: 'String',\n            isNull: 'Null',\n            isUndefined: 'Undefined',\n            isSymbol: 'Symbol',\n            isPlainObject: 'Object',\n            isArray: 'Array',\n            isRegExp: 'RegExp',\n            isDate: 'Date',\n            isfunction: 'Function',\n            isWindow: 'Window'\n        }\n\n        let _type = {},\n            _toString = _type.toString\n\n        for (var key in _obj) {\n            if (!_obj.hasOwnProperty(key)) break\n            _type[key] = (function () {\n                var reg = new RegExp(\"^\\\\[object \" + _obj[key] + \"\\\\]$\")\n                return function anonymous(val) {\n                    return reg.test(_toString.call(val))\n                }\n            })()\n        }\n\n        return _type\n    }\n\n    /**\n     * 判断数据\n     * @param {*} obj \n     */\n    isBlank(obj) {\n        return obj === null || obj === undefined || obj === \"\";\n    }\n\n    /**\n     * 解析url中拼接的参数\n     * @param url\n     * @return {{参数名: string}}\n     */\n    parseUrlParams(url) {\n        if (url.indexOf(\"?\") !== -1) {\n            url = url.substr(url.indexOf(\"?\") + 1);\n        }\n        let paramsArr = url.match(/[^\\?\\=\\&]*\\=[^\\?\\=\\&]*/g);\n        let params = {};\n        if (paramsArr != null) {\n            paramsArr.forEach(item => {\n                let kv = item.split(\"=\");\n                params[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n            });\n        }\n        return params;\n    }\n\n    /**\n     * 解析url\n     * @param {*} url \n     */\n    getQueryObject(url) {\n        let search = url.substring(url.lastIndexOf(\"?\") + 1),\n            obj = {},\n            reg = /([^?&=]+)=([^?&=]*)/g,\n            base_url = url.split(\"?\")[0]\n        search.replace(reg, (rs, $1, $2) => {\n            let name = decodeURIComponent($1),\n                val = decodeURIComponent($2);\n            val = String(val);\n            obj[name] = val;\n        })\n\n        return {\n            baseUrl: base_url,\n            query: obj\n        }\n    }\n\n    /**\n   * 组装url 参数\n   * @param {*} queryObject \n   */\n    makeQuery(queryObject) {\n        let query = Object.entries(queryObject)\n            .reduce((result, entry) => {\n                result.push(entry.join('='))\n                return result\n            }, []).join('&')\n        return `?${query}`\n    }\n\n    /**\n     * 删除url 指定参数\n     * @param {*} name \n     */\n    funcUrlDel(name) {\n        var loca = location;\n        var baseUrl = loca.origin + loca.pathname + \"?\";\n        var query = loca.search.substr(1);\n        if (query.indexOf(name) > -1) {\n            var obj = {};\n            var arr = query.split(\"&\");\n            for (var i = 0; i < arr.length; i++) {\n                arr[i] = arr[i].split(\"=\");\n                obj[arr[i][0]] = arr[i][1];\n            }\n            delete obj[name];\n            var url = baseUrl + JSON.stringify(obj).replace(/[\\\"\\{\\}]/g, \"\").replace(/\\:/g, \"=\").replace(/\\,/g, \"&\");\n            return url\n        }\n    }\n\n    /**\n     * 修改url指定参数\n     * @param {*} paramName \n     * @param {*} replaceWith \n     */\n    replaceParamVal(paramName, replaceWith) {\n        var oUrl = location.href.toString();\n        var re = eval('/(' + paramName + '=)([^&]*)/gi');\n        location.href = oUrl.replace(re, paramName + '=' + replaceWith);\n        return location.href;\n    }\n\n    /**\n     * 处理空对象\n     * @example {a: 1, b: undefined} => {a:1}\n     * @param {*} obj \n     */\n    handleEmptyData(obj = {}) {\n        var newObj = {}\n        if (typeof (obj) === 'object') {\n            Object.keys(obj).map(key => {\n                if (obj[key]) {\n                    newObj[key] = obj[key]\n                }\n            })\n        }\n        return newObj\n    }\n\n    /**\n     * 延迟执行函数, 返回一个 Promise\n     * @param {*} ms \n     */\n    sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n    /**\n     * 对象转化为键值对\n     * @param {*} obj \n     */\n    objectToArray(obj) {\n        return Object.keys(obj).map(key => {\n            return {\n                key: key,\n                value: obj[key]\n            }\n        })\n    }\n\n    /**\n     * 获取省市区\n     * @param {*} ip \n     */\n    getIp(ip) {\n        return LIpip.ip2Locate(ip)\n    }\n}"],"file":"utils.js"}