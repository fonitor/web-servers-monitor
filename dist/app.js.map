{"version":3,"sources":["../src/app.js"],"names":["startup","app","set","path","join","__dirname","use","express","json","urlencoded","extended","static","indexRouter","usersRouter","req","res","next","err","locals","message","error","get","status","render","appConfig","port","origin","methods","credentials","listen","Logger","log","name"],"mappings":";;AAUA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AArBA;;;;;;;;;;AAuBA,MAAMA,OAAO,GAAG,MAAM;AACpB,QAAMC,GAAG,GAAG,uBAAZ,CADoB,CAGpB;;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB,EAJoB,CAKpB;;AACAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,EAAAA,GAAG,CAACK,GAAJ,CAAQ,qBAAO,KAAP,CAAR;AACAL,EAAAA,GAAG,CAACK,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AACAP,EAAAA,GAAG,CAACK,GAAJ,CAAQC,iBAAQE,UAAR,CAAmB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAnB,CAAR;AACAT,EAAAA,GAAG,CAACK,GAAJ,CAAQ,4BAAR;AACAL,EAAAA,GAAG,CAACK,GAAJ,CAAQC,iBAAQI,MAAR,CAAeR,cAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaM,cAAb;AACAX,EAAAA,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBO,cAAlB,EAfoB,CAiBpB;;AACAZ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,UAASQ,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,IAAAA,IAAI,CAAC,yBAAY,GAAZ,CAAD,CAAJ;AACD,GAFD,EAlBoB,CAsBpB;;AACAf,EAAAA,GAAG,CAACK,GAAJ,CAAQ,UAASW,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,IAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,IAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACb,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,IAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,GARD;AAUAtB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBsB,aAAUC,IAA1B,EAjCoB,CAmCpB;;AACAxB,EAAAA,GAAG,CAACK,GAAJ,CAAQ,mBAAK;AACXoB,IAAAA,MAAM,EAAE,IADG;AAEXC,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,QAAxC,EAAkD,SAAlD,CAFE;AAGXC,IAAAA,WAAW,EAAE;AAHF,GAAL,CAAR;AAMA3B,EAAAA,GAAG,CAAC4B,MAAJ,CAAWL,aAAUC,IAArB,EAA2B,YAAW;AACpCK,oBAAOC,GAAP,CAAY,GAAEP,aAAUQ,IAAK,sBAAqBR,aAAUC,IAAK,EAAjE;AACD,GAFD;AAGD,CA7CD;;AAgDAzB,OAAO","sourcesContent":["/*\nCopyright(c)  2017  Lianjia, Inc. All Rights Reserved\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport '@babel/polyfill'\n\nimport path from 'path'\nimport createError from 'http-errors'\nimport express from 'express'\nimport cookieParser from 'cookie-parser'\nimport morgan from 'morgan'\nimport indexRouter from './routes/index'\nimport usersRouter from './routes/users'\nimport cors from 'cors'\nimport appConfig from './config/app'\nimport Logger from './library/logger'\n\nconst startup = () => {\n  const app = express()\n  \n  // view engine setup\n  app.set('views', path.join(__dirname, 'views'));\n  // 设置模板引擎为ejs\n  app.set('view engine', 'ejs')\n\n  app.use(morgan('dev'))\n  app.use(express.json())\n  app.use(express.urlencoded({ extended: false }))\n  app.use(cookieParser())\n  app.use(express.static(path.join(__dirname, 'public')))\n\n  app.use('/', indexRouter)\n  app.use('/users', usersRouter)\n\n  // catch 404 and forward to error handler\n  app.use(function(req, res, next) {\n    next(createError(404))\n  })\n\n  // error handler\n  app.use(function(err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message\n    res.locals.error = req.app.get('env') === 'development' ? err : {}\n\n    // render the error page\n    res.status(err.status || 500)\n    res.render('error')\n  })\n\n  app.set('port', appConfig.port)\n\n  // 支持跨域\n  app.use(cors({\n    origin: true,\n    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],\n    credentials: true\n  }))\n\n  app.listen(appConfig.port, function() {\n    Logger.log(`${appConfig.name} listening on port ${appConfig.port}`)\n  })\n}\n\n\nstartup()"],"file":"app.js"}