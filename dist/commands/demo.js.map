{"version":3,"sources":["../../src/commands/demo.js"],"names":["CommandDemo","Base","signature","description","execute","args","options","onlyFlag","logName","isTest","log"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,MAAMA,WAAN,SAA0BC,aAA1B,CAA+B;AAC3B,aAAWC,SAAX,GAAuB;AACnB,WAAQ;;;;;;UAAR;AAOH;;AAED,aAAWC,WAAX,GAAyB;AACrB,WAAO,iBAAP;AACH;;AAEKC,EAAAA,OAAN,CAAcC,IAAd,EAAoBC,OAApB,EAA6B;AAAA;;AAAA;AACzB,UAAI;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,OAAZ;AAAqBC,QAAAA;AAArB,UAAgCH,OAApC;;AACA,MAAA,KAAI,CAACI,GAAL,CAAU,2BAA0BH,QAAS,EAA7C;;AACA,MAAA,KAAI,CAACG,GAAL,CAAU,0BAAyBF,OAAQ,EAA3C;;AACA,MAAA,KAAI,CAACE,GAAL,CAAU,yBAAwBD,MAAO,EAAzC,EAJyB,CAKzB;AACA;AACA;AACA;AACA;AACA;;AAVyB;AAW5B;;AA1B0B;;eA8BhBT,W","sourcesContent":["import Base from './base'\n\nclass CommandDemo extends Base {\n    static get signature() {\n        return `\n         Command:Demo \n         \n         {--onlyFlag:[必传]flag,只有true/false两个值} \n         {--logName=@value:[必传]日志文件名} \n         {--isTest?=@value:[可选]是否处于测试环境}\n         `\n    }\n\n    static get description() {\n        return '解析kafka日志, 分析pv'\n    }\n\n    async execute(args, options) {\n        let { onlyFlag, logName, isTest } = options\n        this.log(`CommandDemo, onlyFlag=> ${onlyFlag}`)\n        this.log(`CommandDemo, logName=> ${logName}`)\n        this.log(`CommandDemo, isTest=> ${isTest}`)\n        // let i = 0\n        // while (1) {\n        //   i++\n        //   await sleep(1)\n        //   this.log(`第${i}条日志`)\n        // }\n    }\n\n}\n\nexport default CommandDemo"],"file":"demo.js"}